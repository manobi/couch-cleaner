#!/usr/bin/env node
var url = require("url");
var path = require("path");
var CouchCleaner = require("../couch-cleaner");
var program = require('commander');
var EventEmitter = require('events').EventEmitter
var emitter = new EventEmitter();

// Api
program
  .version('0.0.4')
  .option('-a, --all', 'clear all docs')
  .option('-f, --filter [docs]', 'filter some docs from cleanup')
  .option('-g, --gestalt', 'filter all design docs from cleanup')
  .option('-l, --login [user]', 'pass username to auth')
  .parse(process.argv);

// database name || adress
var database = process.argv[2];

var options = {};
if(database){
	options = url.parse(database);
	options.db = options.pathname.replace("/","");
	
	if(options.hostname){ options.host = options.hostname;}
	else {options.host = "localhost";}
	
	if(!options.port){ options.port = 5984;}
	if(!options.procotocol){options.procotocol = "http";}
	
	if(options.auth){
		var auth = options.auth.split(":");
		options.login = auth[0];
		options.password = auth[1];
	}
}

// Attach event
emitter.on('ready',function(){
	var cleaner = new CouchCleaner(options);
	
	if(program.gestalt){
		cleaner.gestalt();
	}
	
	if(program.filter){
		var docs = program.filter.split(',');
		cleaner.filter(docs);
	}
	cleaner.clear();
});

// Event dispatcher
if(program.login){
	options.auth = true;
	options.login = program.login;
	program.password('Password:',function(key){
		options.password = key;
		process.stdin.destroy();
		emitter.emit('ready');
	});
}
else{
	emitter.emit('ready');
}